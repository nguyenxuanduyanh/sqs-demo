AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Example of processing messages on an SQS queue with Lambda
Resources:
  ListenerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/listener.index
      Runtime: nodejs12.x
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt MySqsQueue.QueueName
      Events:
        Api:
          Type: Api
          Properties:
            Path: /ratings
            Method: post
      Environment:
        Variables:
          QUEUE_URL: !Ref MySqsQueue # Gets SQS Queue URL
  WorkerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/worker.index
      Runtime: nodejs12.x
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt MySqsQueue.Arn
            BatchSize: 10
  FailureFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/failure.index
      Runtime: nodejs12.x
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt MyDeadLetterQueue.Arn
            BatchSize: 10

  MySqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      QueueName: demo_trustana_queue.fifo
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt MyDeadLetterQueue.Arn
        maxReceiveCount: 5
  MyDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      QueueName: my_dead_letter_queue_name.fifo
